/**
 * lodgea-js
 * LODGEA SDK for javascript. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineObject from '../com.lodgea.model/InlineObject';
import InlineObject1 from '../com.lodgea.model/InlineObject1';
import InlineResponse200 from '../com.lodgea.model/InlineResponse200';
import InlineResponse2001 from '../com.lodgea.model/InlineResponse2001';
import InlineResponse2002 from '../com.lodgea.model/InlineResponse2002';
import InlineResponse2003 from '../com.lodgea.model/InlineResponse2003';
import InlineResponse2004 from '../com.lodgea.model/InlineResponse2004';
import InlineResponse400 from '../com.lodgea.model/InlineResponse400';
import InlineResponse4001 from '../com.lodgea.model/InlineResponse4001';

/**
* Default service.
* @module com.lodgea/com.lodgea.controllers/DefaultApi
* @version 1.2.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:com.lodgea/com.lodgea.controllers/DefaultApi
    * @class
    * @param {module:com.lodgea/ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:com.lodgea/ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the availabilitySearchPost operation.
     * @callback module:com.lodgea/com.lodgea.controllers/DefaultApi~availabilitySearchPostCallback
     * @param {String} error Error message, if any.
     * @param {module:com.lodgea/com.lodgea.model/InlineResponse2001} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search for availability
     * Get availability information based on search criteria.
     * @param {Object} opts Optional parameters
     * @param {module:com.lodgea/com.lodgea.model/InlineObject1} opts.inlineObject1 
     * @param {module:com.lodgea/com.lodgea.controllers/DefaultApi~availabilitySearchPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.lodgea/com.lodgea.model/InlineResponse2001}
     */
    availabilitySearchPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject1'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse2001;
      return this.apiClient.callApi(
        '/availability/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the locationSearchPost operation.
     * @callback module:com.lodgea/com.lodgea.controllers/DefaultApi~locationSearchPostCallback
     * @param {String} error Error message, if any.
     * @param {module:com.lodgea/com.lodgea.model/InlineResponse200} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search for location
     * Get a list of locations and their lowest available rate related to a given keyword.
     * @param {Object} opts Optional parameters
     * @param {module:com.lodgea/com.lodgea.model/InlineObject} opts.inlineObject 
     * @param {module:com.lodgea/com.lodgea.controllers/DefaultApi~locationSearchPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.lodgea/com.lodgea.model/InlineResponse200}
     */
    locationSearchPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['inlineObject'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = InlineResponse200;
      return this.apiClient.callApi(
        '/location/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the propertiesGet operation.
     * @callback module:com.lodgea/com.lodgea.controllers/DefaultApi~propertiesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:com.lodgea/com.lodgea.model/InlineResponse2002} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List (filtered) properties
     * List properties, optionally filtered by a keyword.
     * @param {Object} opts Optional parameters
     * @param {String} opts.keyword 
     * @param {String} opts.pageToken 
     * @param {module:com.lodgea/com.lodgea.controllers/DefaultApi~propertiesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.lodgea/com.lodgea.model/InlineResponse2002}
     */
    propertiesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'keyword': opts['keyword'],
        'pageToken': opts['pageToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2002;
      return this.apiClient.callApi(
        '/properties', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the propertiesPropertyIdAvailabilityGet operation.
     * @callback module:com.lodgea/com.lodgea.controllers/DefaultApi~propertiesPropertyIdAvailabilityGetCallback
     * @param {String} error Error message, if any.
     * @param {module:com.lodgea/com.lodgea.model/InlineResponse2004} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a properties availability
     * Get detailed availability information for a specific property.
     * @param {String} propertyId 
     * @param {String} currencyCode 
     * @param {module:com.lodgea/com.lodgea.controllers/DefaultApi~propertiesPropertyIdAvailabilityGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.lodgea/com.lodgea.model/InlineResponse2004}
     */
    propertiesPropertyIdAvailabilityGet(propertyId, currencyCode, callback) {
      let postBody = null;
      // verify the required parameter 'propertyId' is set
      if (propertyId === undefined || propertyId === null) {
        throw new Error("Missing the required parameter 'propertyId' when calling propertiesPropertyIdAvailabilityGet");
      }
      // verify the required parameter 'currencyCode' is set
      if (currencyCode === undefined || currencyCode === null) {
        throw new Error("Missing the required parameter 'currencyCode' when calling propertiesPropertyIdAvailabilityGet");
      }

      let pathParams = {
        'propertyId': propertyId
      };
      let queryParams = {
        'currencyCode': currencyCode
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2004;
      return this.apiClient.callApi(
        '/properties/{propertyId}/availability', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the propertiesPropertyIdGet operation.
     * @callback module:com.lodgea/com.lodgea.controllers/DefaultApi~propertiesPropertyIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:com.lodgea/com.lodgea.model/InlineResponse2003} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a properties details
     * Get all information about a specific property by its ID.
     * @param {String} propertyId 
     * @param {module:com.lodgea/com.lodgea.controllers/DefaultApi~propertiesPropertyIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:com.lodgea/com.lodgea.model/InlineResponse2003}
     */
    propertiesPropertyIdGet(propertyId, callback) {
      let postBody = null;
      // verify the required parameter 'propertyId' is set
      if (propertyId === undefined || propertyId === null) {
        throw new Error("Missing the required parameter 'propertyId' when calling propertiesPropertyIdGet");
      }

      let pathParams = {
        'propertyId': propertyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = InlineResponse2003;
      return this.apiClient.callApi(
        '/properties/{propertyId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
