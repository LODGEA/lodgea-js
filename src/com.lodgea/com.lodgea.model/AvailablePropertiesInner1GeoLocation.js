/**
 * lodgea-js
 * LODGEA SDK for Javascript. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AvailablePropertiesInner1GeoLocation model module.
 * @module com.lodgea/com.lodgea.model/AvailablePropertiesInner1GeoLocation
 * @version 1.1.0
 */
class AvailablePropertiesInner1GeoLocation {
    /**
     * Constructs a new <code>AvailablePropertiesInner1GeoLocation</code>.
     * @alias module:com.lodgea/com.lodgea.model/AvailablePropertiesInner1GeoLocation
     * @param lng {Number} The longitude coordinate of the location.
     * @param lat {Number} The location of the property as coordinates
     */
    constructor(lng, lat) { 
        
        AvailablePropertiesInner1GeoLocation.initialize(this, lng, lat);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, lng, lat) { 
        obj['lng'] = lng;
        obj['lat'] = lat;
    }

    /**
     * Constructs a <code>AvailablePropertiesInner1GeoLocation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.lodgea/com.lodgea.model/AvailablePropertiesInner1GeoLocation} obj Optional instance to populate.
     * @return {module:com.lodgea/com.lodgea.model/AvailablePropertiesInner1GeoLocation} The populated <code>AvailablePropertiesInner1GeoLocation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailablePropertiesInner1GeoLocation();

            if (data.hasOwnProperty('lng')) {
                obj['lng'] = ApiClient.convertToType(data['lng'], 'Number');
            }
            if (data.hasOwnProperty('lat')) {
                obj['lat'] = ApiClient.convertToType(data['lat'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * The longitude coordinate of the location.
 * @member {Number} lng
 */
AvailablePropertiesInner1GeoLocation.prototype['lng'] = undefined;

/**
 * The location of the property as coordinates
 * @member {Number} lat
 */
AvailablePropertiesInner1GeoLocation.prototype['lat'] = undefined;






export default AvailablePropertiesInner1GeoLocation;

