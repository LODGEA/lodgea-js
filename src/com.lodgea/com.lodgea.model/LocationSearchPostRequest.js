/**
 * lodgea-js
 * LODGEA SDK for javascript. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LocationSearchPostRequest model module.
 * @module com.lodgea/com.lodgea.model/LocationSearchPostRequest
 * @version 1.1.5
 */
class LocationSearchPostRequest {
    /**
     * Constructs a new <code>LocationSearchPostRequest</code>.
     * @alias module:com.lodgea/com.lodgea.model/LocationSearchPostRequest
     * @param searchText {String} A search text in free form to search locations by.
     * @param currencyCode {module:com.lodgea/com.lodgea.model/LocationSearchPostRequest.CurrencyCodeEnum} The currency code of the currency in which the lowest price for each found location should be returned.<p>See also <a href=\"#currencycodes\">in the appendix</a>.</p>
     * @param languageCode {module:com.lodgea/com.lodgea.model/LocationSearchPostRequest.LanguageCodeEnum} The language code of the language in which the descriptive texts for each found location should be returned.<p>Please note that beside the general restrictions listed below only languages configured during system setup for your respective tenant are allowed.</p><p>See also <a href=\"#isolanguage-codes\">in the appendix</a>.</p>
     */
    constructor(searchText, currencyCode, languageCode) { 
        
        LocationSearchPostRequest.initialize(this, searchText, currencyCode, languageCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, searchText, currencyCode, languageCode) { 
        obj['searchText'] = searchText;
        obj['currencyCode'] = currencyCode;
        obj['languageCode'] = languageCode;
    }

    /**
     * Constructs a <code>LocationSearchPostRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.lodgea/com.lodgea.model/LocationSearchPostRequest} obj Optional instance to populate.
     * @return {module:com.lodgea/com.lodgea.model/LocationSearchPostRequest} The populated <code>LocationSearchPostRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LocationSearchPostRequest();

            if (data.hasOwnProperty('searchText')) {
                obj['searchText'] = ApiClient.convertToType(data['searchText'], 'String');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('languageCode')) {
                obj['languageCode'] = ApiClient.convertToType(data['languageCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LocationSearchPostRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LocationSearchPostRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of LocationSearchPostRequest.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['searchText'] && !(typeof data['searchText'] === 'string' || data['searchText'] instanceof String)) {
            throw new Error("Expected the field `searchText` to be a primitive type in the JSON string but got " + data['searchText']);
        }
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['languageCode'] && !(typeof data['languageCode'] === 'string' || data['languageCode'] instanceof String)) {
            throw new Error("Expected the field `languageCode` to be a primitive type in the JSON string but got " + data['languageCode']);
        }

        return true;
    }


}

LocationSearchPostRequest.RequiredProperties = ["searchText", "currencyCode", "languageCode"];

/**
 * A search text in free form to search locations by.
 * @member {String} searchText
 */
LocationSearchPostRequest.prototype['searchText'] = undefined;

/**
 * The currency code of the currency in which the lowest price for each found location should be returned.<p>See also <a href=\"#currencycodes\">in the appendix</a>.</p>
 * @member {module:com.lodgea/com.lodgea.model/LocationSearchPostRequest.CurrencyCodeEnum} currencyCode
 */
LocationSearchPostRequest.prototype['currencyCode'] = undefined;

/**
 * The language code of the language in which the descriptive texts for each found location should be returned.<p>Please note that beside the general restrictions listed below only languages configured during system setup for your respective tenant are allowed.</p><p>See also <a href=\"#isolanguage-codes\">in the appendix</a>.</p>
 * @member {module:com.lodgea/com.lodgea.model/LocationSearchPostRequest.LanguageCodeEnum} languageCode
 */
LocationSearchPostRequest.prototype['languageCode'] = undefined;





/**
 * Allowed values for the <code>currencyCode</code> property.
 * @enum {String}
 * @readonly
 */
LocationSearchPostRequest['CurrencyCodeEnum'] = {

    /**
     * value: "AED"
     * @const
     */
    "AED": "AED",

    /**
     * value: "ARS"
     * @const
     */
    "ARS": "ARS",

    /**
     * value: "AUD"
     * @const
     */
    "AUD": "AUD",

    /**
     * value: "AZN"
     * @const
     */
    "AZN": "AZN",

    /**
     * value: "BGN"
     * @const
     */
    "BGN": "BGN",

    /**
     * value: "BHD"
     * @const
     */
    "BHD": "BHD",

    /**
     * value: "BRL"
     * @const
     */
    "BRL": "BRL",

    /**
     * value: "CAD"
     * @const
     */
    "CAD": "CAD",

    /**
     * value: "CHF"
     * @const
     */
    "CHF": "CHF",

    /**
     * value: "CLP"
     * @const
     */
    "CLP": "CLP",

    /**
     * value: "CNY"
     * @const
     */
    "CNY": "CNY",

    /**
     * value: "COP"
     * @const
     */
    "COP": "COP",

    /**
     * value: "CZK"
     * @const
     */
    "CZK": "CZK",

    /**
     * value: "DKK"
     * @const
     */
    "DKK": "DKK",

    /**
     * value: "EGP"
     * @const
     */
    "EGP": "EGP",

    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR",

    /**
     * value: "FJD"
     * @const
     */
    "FJD": "FJD",

    /**
     * value: "GBP"
     * @const
     */
    "GBP": "GBP",

    /**
     * value: "GEL"
     * @const
     */
    "GEL": "GEL",

    /**
     * value: "HKD"
     * @const
     */
    "HKD": "HKD",

    /**
     * value: "HUF"
     * @const
     */
    "HUF": "HUF",

    /**
     * value: "IDR"
     * @const
     */
    "IDR": "IDR",

    /**
     * value: "ILS"
     * @const
     */
    "ILS": "ILS",

    /**
     * value: "INR"
     * @const
     */
    "INR": "INR",

    /**
     * value: "JOD"
     * @const
     */
    "JOD": "JOD",

    /**
     * value: "JPY"
     * @const
     */
    "JPY": "JPY",

    /**
     * value: "KRW"
     * @const
     */
    "KRW": "KRW",

    /**
     * value: "KWD"
     * @const
     */
    "KWD": "KWD",

    /**
     * value: "KZT"
     * @const
     */
    "KZT": "KZT",

    /**
     * value: "MDL"
     * @const
     */
    "MDL": "MDL",

    /**
     * value: "MXN"
     * @const
     */
    "MXN": "MXN",

    /**
     * value: "MYR"
     * @const
     */
    "MYR": "MYR",

    /**
     * value: "NAD"
     * @const
     */
    "NAD": "NAD",

    /**
     * value: "NOK"
     * @const
     */
    "NOK": "NOK",

    /**
     * value: "NZD"
     * @const
     */
    "NZD": "NZD",

    /**
     * value: "OMR"
     * @const
     */
    "OMR": "OMR",

    /**
     * value: "PLN"
     * @const
     */
    "PLN": "PLN",

    /**
     * value: "QAR"
     * @const
     */
    "QAR": "QAR",

    /**
     * value: "RON"
     * @const
     */
    "RON": "RON",

    /**
     * value: "RUB"
     * @const
     */
    "RUB": "RUB",

    /**
     * value: "SAR"
     * @const
     */
    "SAR": "SAR",

    /**
     * value: "SEK"
     * @const
     */
    "SEK": "SEK",

    /**
     * value: "SGD"
     * @const
     */
    "SGD": "SGD",

    /**
     * value: "THB"
     * @const
     */
    "THB": "THB",

    /**
     * value: "TRY"
     * @const
     */
    "TRY": "TRY",

    /**
     * value: "TWD"
     * @const
     */
    "TWD": "TWD",

    /**
     * value: "UAH"
     * @const
     */
    "UAH": "UAH",

    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",

    /**
     * value: "XOF"
     * @const
     */
    "XOF": "XOF",

    /**
     * value: "ZAR"
     * @const
     */
    "ZAR": "ZAR"
};


/**
 * Allowed values for the <code>languageCode</code> property.
 * @enum {String}
 * @readonly
 */
LocationSearchPostRequest['LanguageCodeEnum'] = {

    /**
     * value: "af"
     * @const
     */
    "af": "af",

    /**
     * value: "ar"
     * @const
     */
    "ar": "ar",

    /**
     * value: "bg"
     * @const
     */
    "bg": "bg",

    /**
     * value: "ca"
     * @const
     */
    "ca": "ca",

    /**
     * value: "cs"
     * @const
     */
    "cs": "cs",

    /**
     * value: "da"
     * @const
     */
    "da": "da",

    /**
     * value: "de"
     * @const
     */
    "de": "de",

    /**
     * value: "el"
     * @const
     */
    "el": "el",

    /**
     * value: "en"
     * @const
     */
    "en": "en",

    /**
     * value: "es"
     * @const
     */
    "es": "es",

    /**
     * value: "et"
     * @const
     */
    "et": "et",

    /**
     * value: "fi"
     * @const
     */
    "fi": "fi",

    /**
     * value: "fr"
     * @const
     */
    "fr": "fr",

    /**
     * value: "he"
     * @const
     */
    "he": "he",

    /**
     * value: "hi"
     * @const
     */
    "hi": "hi",

    /**
     * value: "hr"
     * @const
     */
    "hr": "hr",

    /**
     * value: "hu"
     * @const
     */
    "hu": "hu",

    /**
     * value: "id"
     * @const
     */
    "id": "id",

    /**
     * value: "is"
     * @const
     */
    "is": "is",

    /**
     * value: "it"
     * @const
     */
    "it": "it",

    /**
     * value: "ja"
     * @const
     */
    "ja": "ja",

    /**
     * value: "ko"
     * @const
     */
    "ko": "ko",

    /**
     * value: "lt"
     * @const
     */
    "lt": "lt",

    /**
     * value: "lv"
     * @const
     */
    "lv": "lv",

    /**
     * value: "nl"
     * @const
     */
    "nl": "nl",

    /**
     * value: "no"
     * @const
     */
    "no": "no",

    /**
     * value: "pl"
     * @const
     */
    "pl": "pl",

    /**
     * value: "pt"
     * @const
     */
    "pt": "pt",

    /**
     * value: "ro"
     * @const
     */
    "ro": "ro",

    /**
     * value: "ru"
     * @const
     */
    "ru": "ru",

    /**
     * value: "sk"
     * @const
     */
    "sk": "sk",

    /**
     * value: "sl"
     * @const
     */
    "sl": "sl",

    /**
     * value: "sr"
     * @const
     */
    "sr": "sr",

    /**
     * value: "sv"
     * @const
     */
    "sv": "sv",

    /**
     * value: "th"
     * @const
     */
    "th": "th",

    /**
     * value: "tr"
     * @const
     */
    "tr": "tr",

    /**
     * value: "vi"
     * @const
     */
    "vi": "vi",

    /**
     * value: "zh"
     * @const
     */
    "zh": "zh"
};



export default LocationSearchPostRequest;

