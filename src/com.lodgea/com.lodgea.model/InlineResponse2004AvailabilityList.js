/**
 * lodgea-js
 * LODGEA SDK for javascript. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse2004RatePlanList from './InlineResponse2004RatePlanList';

/**
 * The InlineResponse2004AvailabilityList model module.
 * @module com.lodgea/com.lodgea.model/InlineResponse2004AvailabilityList
 * @version 1.2.0
 */
class InlineResponse2004AvailabilityList {
    /**
     * Constructs a new <code>InlineResponse2004AvailabilityList</code>.
     * @alias module:com.lodgea/com.lodgea.model/InlineResponse2004AvailabilityList
     * @param ratePlanList {Array.<module:com.lodgea/com.lodgea.model/InlineResponse2004RatePlanList>} A list of available rate plans.
     * @param name {String} The name of the rate plan group.
     * @param mealPlanList {Array.<module:com.lodgea/com.lodgea.model/InlineResponse2004AvailabilityList.MealPlanListEnum>} The available meal plans.<p>See also <a href=\"#mealplan-type-codes\">in the appendix</a>.</p>
     * @param roomTypeList {Array.<String>} The rooms this availability is for.
     */
    constructor(ratePlanList, name, mealPlanList, roomTypeList) { 
        
        InlineResponse2004AvailabilityList.initialize(this, ratePlanList, name, mealPlanList, roomTypeList);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ratePlanList, name, mealPlanList, roomTypeList) { 
        obj['ratePlanList'] = ratePlanList;
        obj['name'] = name;
        obj['mealPlanList'] = mealPlanList;
        obj['roomTypeList'] = roomTypeList;
    }

    /**
     * Constructs a <code>InlineResponse2004AvailabilityList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.lodgea/com.lodgea.model/InlineResponse2004AvailabilityList} obj Optional instance to populate.
     * @return {module:com.lodgea/com.lodgea.model/InlineResponse2004AvailabilityList} The populated <code>InlineResponse2004AvailabilityList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2004AvailabilityList();

            if (data.hasOwnProperty('ratePlanList')) {
                obj['ratePlanList'] = ApiClient.convertToType(data['ratePlanList'], [InlineResponse2004RatePlanList]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('mealPlanList')) {
                obj['mealPlanList'] = ApiClient.convertToType(data['mealPlanList'], ['Number']);
            }
            if (data.hasOwnProperty('roomTypeList')) {
                obj['roomTypeList'] = ApiClient.convertToType(data['roomTypeList'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * A list of available rate plans.
 * @member {Array.<module:com.lodgea/com.lodgea.model/InlineResponse2004RatePlanList>} ratePlanList
 */
InlineResponse2004AvailabilityList.prototype['ratePlanList'] = undefined;

/**
 * The name of the rate plan group.
 * @member {String} name
 */
InlineResponse2004AvailabilityList.prototype['name'] = undefined;

/**
 * The available meal plans.<p>See also <a href=\"#mealplan-type-codes\">in the appendix</a>.</p>
 * @member {Array.<module:com.lodgea/com.lodgea.model/InlineResponse2004AvailabilityList.MealPlanListEnum>} mealPlanList
 */
InlineResponse2004AvailabilityList.prototype['mealPlanList'] = undefined;

/**
 * The rooms this availability is for.
 * @member {Array.<String>} roomTypeList
 */
InlineResponse2004AvailabilityList.prototype['roomTypeList'] = undefined;





/**
 * Allowed values for the <code>mealPlanList</code> property.
 * @enum {Number}
 * @readonly
 */
InlineResponse2004AvailabilityList['MealPlanListEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 5
     * @const
     */
    "5": 5,

    /**
     * value: 6
     * @const
     */
    "6": 6,

    /**
     * value: 7
     * @const
     */
    "7": 7,

    /**
     * value: 8
     * @const
     */
    "8": 8,

    /**
     * value: 9
     * @const
     */
    "9": 9,

    /**
     * value: 10
     * @const
     */
    "10": 10,

    /**
     * value: 11
     * @const
     */
    "11": 11,

    /**
     * value: 12
     * @const
     */
    "12": 12,

    /**
     * value: 14
     * @const
     */
    "14": 14,

    /**
     * value: 15
     * @const
     */
    "15": 15,

    /**
     * value: 16
     * @const
     */
    "16": 16,

    /**
     * value: 17
     * @const
     */
    "17": 17,

    /**
     * value: 18
     * @const
     */
    "18": 18,

    /**
     * value: 19
     * @const
     */
    "19": 19,

    /**
     * value: 20
     * @const
     */
    "20": 20,

    /**
     * value: 21
     * @const
     */
    "21": 21,

    /**
     * value: 22
     * @const
     */
    "22": 22,

    /**
     * value: 23
     * @const
     */
    "23": 23,

    /**
     * value: 24
     * @const
     */
    "24": 24,

    /**
     * value: 90001
     * @const
     */
    "90001": 90001
};



export default InlineResponse2004AvailabilityList;

