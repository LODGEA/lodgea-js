/**
 * lodgea-js
 * LODGEA SDK for javascript. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse2001GeoLocation from './InlineResponse2001GeoLocation';

/**
 * The InlineResponse2001Geo model module.
 * @module com.lodgea/com.lodgea.model/InlineResponse2001Geo
 * @version 1.2.0
 */
class InlineResponse2001Geo {
    /**
     * Constructs a new <code>InlineResponse2001Geo</code>.
     * A geographical information set describing the location of this property.&lt;br&gt;&lt;br&gt;See also &lt;a href&#x3D;\&quot;#locationtypes\&quot;&gt;in the appendix&lt;/a&gt;.
     * @alias module:com.lodgea/com.lodgea.model/InlineResponse2001Geo
     * @param language {String} The language of the localizable fields ot this geographical information set.<p>Please note that beside the general restrictions listed below only languages configured during system setup for your respective tenant are allowed.</p><p>See also <a href=\"#isolanguage-codes\">in the appendix</a>.</p>
     * @param formattedAddress {String} The formatted address in the local format of the properties location.
     * @param location {module:com.lodgea/com.lodgea.model/InlineResponse2001GeoLocation} 
     * @param placeId {String} Uniquely identifies a place in our database.
     */
    constructor(language, formattedAddress, location, placeId) { 
        
        InlineResponse2001Geo.initialize(this, language, formattedAddress, location, placeId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, language, formattedAddress, location, placeId) { 
        obj['language'] = language;
        obj['formatted_address'] = formattedAddress;
        obj['location'] = location;
        obj['place_id'] = placeId;
    }

    /**
     * Constructs a <code>InlineResponse2001Geo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.lodgea/com.lodgea.model/InlineResponse2001Geo} obj Optional instance to populate.
     * @return {module:com.lodgea/com.lodgea.model/InlineResponse2001Geo} The populated <code>InlineResponse2001Geo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2001Geo();

            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('formatted_address')) {
                obj['formatted_address'] = ApiClient.convertToType(data['formatted_address'], 'String');
            }
            if (data.hasOwnProperty('route')) {
                obj['route'] = ApiClient.convertToType(data['route'], 'String');
            }
            if (data.hasOwnProperty('street_number')) {
                obj['street_number'] = ApiClient.convertToType(data['street_number'], 'String');
            }
            if (data.hasOwnProperty('postal_code')) {
                obj['postal_code'] = ApiClient.convertToType(data['postal_code'], 'String');
            }
            if (data.hasOwnProperty('locality')) {
                obj['locality'] = ApiClient.convertToType(data['locality'], 'String');
            }
            if (data.hasOwnProperty('sublocality')) {
                obj['sublocality'] = ApiClient.convertToType(data['sublocality'], 'String');
            }
            if (data.hasOwnProperty('sublocality_level_1')) {
                obj['sublocality_level_1'] = ApiClient.convertToType(data['sublocality_level_1'], 'String');
            }
            if (data.hasOwnProperty('sublocality_level_2')) {
                obj['sublocality_level_2'] = ApiClient.convertToType(data['sublocality_level_2'], 'String');
            }
            if (data.hasOwnProperty('sublocality_level_3')) {
                obj['sublocality_level_3'] = ApiClient.convertToType(data['sublocality_level_3'], 'String');
            }
            if (data.hasOwnProperty('sublocality_level_4')) {
                obj['sublocality_level_4'] = ApiClient.convertToType(data['sublocality_level_4'], 'String');
            }
            if (data.hasOwnProperty('sublocality_level_5')) {
                obj['sublocality_level_5'] = ApiClient.convertToType(data['sublocality_level_5'], 'String');
            }
            if (data.hasOwnProperty('administrative_area_level_1')) {
                obj['administrative_area_level_1'] = ApiClient.convertToType(data['administrative_area_level_1'], 'String');
            }
            if (data.hasOwnProperty('administrative_area_level_2')) {
                obj['administrative_area_level_2'] = ApiClient.convertToType(data['administrative_area_level_2'], 'String');
            }
            if (data.hasOwnProperty('administrative_area_level_3')) {
                obj['administrative_area_level_3'] = ApiClient.convertToType(data['administrative_area_level_3'], 'String');
            }
            if (data.hasOwnProperty('administrative_area_level_4')) {
                obj['administrative_area_level_4'] = ApiClient.convertToType(data['administrative_area_level_4'], 'String');
            }
            if (data.hasOwnProperty('administrative_area_level_5')) {
                obj['administrative_area_level_5'] = ApiClient.convertToType(data['administrative_area_level_5'], 'String');
            }
            if (data.hasOwnProperty('state_code')) {
                obj['state_code'] = ApiClient.convertToType(data['state_code'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('country_code')) {
                obj['country_code'] = ApiClient.convertToType(data['country_code'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = InlineResponse2001GeoLocation.constructFromObject(data['location']);
            }
            if (data.hasOwnProperty('place_id')) {
                obj['place_id'] = ApiClient.convertToType(data['place_id'], 'String');
            }
        }
        return obj;
    }


}

/**
 * The language of the localizable fields ot this geographical information set.<p>Please note that beside the general restrictions listed below only languages configured during system setup for your respective tenant are allowed.</p><p>See also <a href=\"#isolanguage-codes\">in the appendix</a>.</p>
 * @member {String} language
 */
InlineResponse2001Geo.prototype['language'] = undefined;

/**
 * The formatted address in the local format of the properties location.
 * @member {String} formatted_address
 */
InlineResponse2001Geo.prototype['formatted_address'] = undefined;

/**
 * The name of the route or street.
 * @member {String} route
 */
InlineResponse2001Geo.prototype['route'] = undefined;

/**
 * The number of the street.
 * @member {String} street_number
 */
InlineResponse2001Geo.prototype['street_number'] = undefined;

/**
 * The postal code of the location.
 * @member {String} postal_code
 */
InlineResponse2001Geo.prototype['postal_code'] = undefined;

/**
 * A city or town.
 * @member {String} locality
 */
InlineResponse2001Geo.prototype['locality'] = undefined;

/**
 * A smaller area within a locality.
 * @member {String} sublocality
 */
InlineResponse2001Geo.prototype['sublocality'] = undefined;

/**
 * A smaller area within a locality at level 1.
 * @member {String} sublocality_level_1
 */
InlineResponse2001Geo.prototype['sublocality_level_1'] = undefined;

/**
 * A smaller area within a locality at level 2.
 * @member {String} sublocality_level_2
 */
InlineResponse2001Geo.prototype['sublocality_level_2'] = undefined;

/**
 * A smaller area within a locality at level 3.
 * @member {String} sublocality_level_3
 */
InlineResponse2001Geo.prototype['sublocality_level_3'] = undefined;

/**
 * A smaller area within a locality at level 4.
 * @member {String} sublocality_level_4
 */
InlineResponse2001Geo.prototype['sublocality_level_4'] = undefined;

/**
 * A smaller area within a locality at level 5.
 * @member {String} sublocality_level_5
 */
InlineResponse2001Geo.prototype['sublocality_level_5'] = undefined;

/**
 * A level 1 administrative area, such as a state or province.
 * @member {String} administrative_area_level_1
 */
InlineResponse2001Geo.prototype['administrative_area_level_1'] = undefined;

/**
 * A level 2 administrative area.
 * @member {String} administrative_area_level_2
 */
InlineResponse2001Geo.prototype['administrative_area_level_2'] = undefined;

/**
 * A level 3 administrative area
 * @member {String} administrative_area_level_3
 */
InlineResponse2001Geo.prototype['administrative_area_level_3'] = undefined;

/**
 * A level 4 administrative area.
 * @member {String} administrative_area_level_4
 */
InlineResponse2001Geo.prototype['administrative_area_level_4'] = undefined;

/**
 * A level 5 administrative area
 * @member {String} administrative_area_level_5
 */
InlineResponse2001Geo.prototype['administrative_area_level_5'] = undefined;

/**
 * The state or province code for the administrative area.
 * @member {String} state_code
 */
InlineResponse2001Geo.prototype['state_code'] = undefined;

/**
 * The country of this geographical information set.
 * @member {String} country
 */
InlineResponse2001Geo.prototype['country'] = undefined;

/**
 * The country code for the country.
 * @member {String} country_code
 */
InlineResponse2001Geo.prototype['country_code'] = undefined;

/**
 * @member {module:com.lodgea/com.lodgea.model/InlineResponse2001GeoLocation} location
 */
InlineResponse2001Geo.prototype['location'] = undefined;

/**
 * Uniquely identifies a place in our database.
 * @member {String} place_id
 */
InlineResponse2001Geo.prototype['place_id'] = undefined;






export default InlineResponse2001Geo;

