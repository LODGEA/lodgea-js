/**
 * lodgea-js
 * LODGEA SDK for javascript. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PropertiesPropertyIdGet200ResponsePropertyGuestInfo model module.
 * @module com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyGuestInfo
 * @version 1.1.0
 */
class PropertiesPropertyIdGet200ResponsePropertyGuestInfo {
    /**
     * Constructs a new <code>PropertiesPropertyIdGet200ResponsePropertyGuestInfo</code>.
     * Information regarding requirements towards guests.
     * @alias module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyGuestInfo
     * @param guestAddressRequired {Boolean} Whether the address of the guest is required to book this property.
     * @param guestContactNumberRequired {Boolean} Whether the phone number of the guest is required to book this property.
     * @param guestNameListRequired {Boolean} Whether a list of the guests names is required to book this property.
     */
    constructor(guestAddressRequired, guestContactNumberRequired, guestNameListRequired) { 
        
        PropertiesPropertyIdGet200ResponsePropertyGuestInfo.initialize(this, guestAddressRequired, guestContactNumberRequired, guestNameListRequired);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, guestAddressRequired, guestContactNumberRequired, guestNameListRequired) { 
        obj['guestAddressRequired'] = guestAddressRequired;
        obj['guestContactNumberRequired'] = guestContactNumberRequired;
        obj['guestNameListRequired'] = guestNameListRequired;
    }

    /**
     * Constructs a <code>PropertiesPropertyIdGet200ResponsePropertyGuestInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyGuestInfo} obj Optional instance to populate.
     * @return {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyGuestInfo} The populated <code>PropertiesPropertyIdGet200ResponsePropertyGuestInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PropertiesPropertyIdGet200ResponsePropertyGuestInfo();

            if (data.hasOwnProperty('guestAddressRequired')) {
                obj['guestAddressRequired'] = ApiClient.convertToType(data['guestAddressRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('guestContactNumberRequired')) {
                obj['guestContactNumberRequired'] = ApiClient.convertToType(data['guestContactNumberRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('guestNameListRequired')) {
                obj['guestNameListRequired'] = ApiClient.convertToType(data['guestNameListRequired'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PropertiesPropertyIdGet200ResponsePropertyGuestInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PropertiesPropertyIdGet200ResponsePropertyGuestInfo</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PropertiesPropertyIdGet200ResponsePropertyGuestInfo.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

PropertiesPropertyIdGet200ResponsePropertyGuestInfo.RequiredProperties = ["guestAddressRequired", "guestContactNumberRequired", "guestNameListRequired"];

/**
 * Whether the address of the guest is required to book this property.
 * @member {Boolean} guestAddressRequired
 */
PropertiesPropertyIdGet200ResponsePropertyGuestInfo.prototype['guestAddressRequired'] = undefined;

/**
 * Whether the phone number of the guest is required to book this property.
 * @member {Boolean} guestContactNumberRequired
 */
PropertiesPropertyIdGet200ResponsePropertyGuestInfo.prototype['guestContactNumberRequired'] = undefined;

/**
 * Whether a list of the guests names is required to book this property.
 * @member {Boolean} guestNameListRequired
 */
PropertiesPropertyIdGet200ResponsePropertyGuestInfo.prototype['guestNameListRequired'] = undefined;






export default PropertiesPropertyIdGet200ResponsePropertyGuestInfo;

