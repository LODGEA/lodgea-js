/**
 * lodgea-js
 * LODGEA SDK for Javascript. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner model module.
 * @module com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner
 * @version 1.1.0
 */
class PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner {
    /**
     * Constructs a new <code>PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner</code>.
     * @alias module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner
     * @param typeCode {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.TypeCodeEnum} The code that represents the type of fee.<p>See also <a href=\"#feetype-codes\">in the appendix</a>.</p>
     * @param chargeType {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.ChargeTypeEnum} The type of charge.
     * @param chargeFrequencyCode {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.ChargeFrequencyCodeEnum} The code that represents the frequency of charge.<p>See also <a href=\"#chargetype-codes\">in the appendix</a>.</p>
     * @param currencyCode {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.CurrencyCodeEnum} The currency code of the currency in that the charge is applied.<p>See also <a href=\"#currencycodes\">in the appendix</a>.</p>
     * @param conditionList {Array.<module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.ConditionListEnum>} A list of conditions for the tax. Is empty if <code>chargeType</code> is not <code>conditional</code>.
     */
    constructor(typeCode, chargeType, chargeFrequencyCode, currencyCode, conditionList) { 
        
        PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.initialize(this, typeCode, chargeType, chargeFrequencyCode, currencyCode, conditionList);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, typeCode, chargeType, chargeFrequencyCode, currencyCode, conditionList) { 
        obj['typeCode'] = typeCode;
        obj['chargeType'] = chargeType;
        obj['chargeFrequencyCode'] = chargeFrequencyCode;
        obj['currencyCode'] = currencyCode;
        obj['conditionList'] = conditionList;
    }

    /**
     * Constructs a <code>PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner} obj Optional instance to populate.
     * @return {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner} The populated <code>PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner();

            if (data.hasOwnProperty('typeCode')) {
                obj['typeCode'] = ApiClient.convertToType(data['typeCode'], 'Number');
            }
            if (data.hasOwnProperty('percent')) {
                obj['percent'] = ApiClient.convertToType(data['percent'], 'Number');
            }
            if (data.hasOwnProperty('chargeType')) {
                obj['chargeType'] = ApiClient.convertToType(data['chargeType'], 'String');
            }
            if (data.hasOwnProperty('chargeFrequencyCode')) {
                obj['chargeFrequencyCode'] = ApiClient.convertToType(data['chargeFrequencyCode'], 'Number');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('conditionList')) {
                obj['conditionList'] = ApiClient.convertToType(data['conditionList'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * The code that represents the type of fee.<p>See also <a href=\"#feetype-codes\">in the appendix</a>.</p>
 * @member {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.TypeCodeEnum} typeCode
 */
PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.prototype['typeCode'] = undefined;

/**
 * The charged percentage if applicable.
 * @member {Number} percent
 */
PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.prototype['percent'] = undefined;

/**
 * The type of charge.
 * @member {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.ChargeTypeEnum} chargeType
 */
PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.prototype['chargeType'] = undefined;

/**
 * The code that represents the frequency of charge.<p>See also <a href=\"#chargetype-codes\">in the appendix</a>.</p>
 * @member {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.ChargeFrequencyCodeEnum} chargeFrequencyCode
 */
PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.prototype['chargeFrequencyCode'] = undefined;

/**
 * The currency code of the currency in that the charge is applied.<p>See also <a href=\"#currencycodes\">in the appendix</a>.</p>
 * @member {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.CurrencyCodeEnum} currencyCode
 */
PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.prototype['currencyCode'] = undefined;

/**
 * A list of conditions for the tax. Is empty if <code>chargeType</code> is not <code>conditional</code>.
 * @member {Array.<module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.ConditionListEnum>} conditionList
 */
PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner.prototype['conditionList'] = undefined;





/**
 * Allowed values for the <code>typeCode</code> property.
 * @enum {Number}
 * @readonly
 */
PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner['TypeCodeEnum'] = {

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 9
     * @const
     */
    "9": 9,

    /**
     * value: 11
     * @const
     */
    "11": 11,

    /**
     * value: 12
     * @const
     */
    "12": 12,

    /**
     * value: 14
     * @const
     */
    "14": 14,

    /**
     * value: 16
     * @const
     */
    "16": 16,

    /**
     * value: 27
     * @const
     */
    "27": 27,

    /**
     * value: 29
     * @const
     */
    "29": 29,

    /**
     * value: 31
     * @const
     */
    "31": 31,

    /**
     * value: 32
     * @const
     */
    "32": 32,

    /**
     * value: 33
     * @const
     */
    "33": 33,

    /**
     * value: 34
     * @const
     */
    "34": 34,

    /**
     * value: 37
     * @const
     */
    "37": 37,

    /**
     * value: 38
     * @const
     */
    "38": 38,

    /**
     * value: 40
     * @const
     */
    "40": 40,

    /**
     * value: 41
     * @const
     */
    "41": 41,

    /**
     * value: 42
     * @const
     */
    "42": 42,

    /**
     * value: 44
     * @const
     */
    "44": 44,

    /**
     * value: 45
     * @const
     */
    "45": 45,

    /**
     * value: 47
     * @const
     */
    "47": 47,

    /**
     * value: 51
     * @const
     */
    "51": 51,

    /**
     * value: 52
     * @const
     */
    "52": 52,

    /**
     * value: 53
     * @const
     */
    "53": 53,

    /**
     * value: 54
     * @const
     */
    "54": 54,

    /**
     * value: 55
     * @const
     */
    "55": 55,

    /**
     * value: 56
     * @const
     */
    "56": 56,

    /**
     * value: 5000
     * @const
     */
    "5000": 5000,

    /**
     * value: 5003
     * @const
     */
    "5003": 5003,

    /**
     * value: 5005
     * @const
     */
    "5005": 5005,

    /**
     * value: 5006
     * @const
     */
    "5006": 5006,

    /**
     * value: 5009
     * @const
     */
    "5009": 5009,

    /**
     * value: 5010
     * @const
     */
    "5010": 5010,

    /**
     * value: 5011
     * @const
     */
    "5011": 5011,

    /**
     * value: 5012
     * @const
     */
    "5012": 5012,

    /**
     * value: 5013
     * @const
     */
    "5013": 5013,

    /**
     * value: 5014
     * @const
     */
    "5014": 5014,

    /**
     * value: 5015
     * @const
     */
    "5015": 5015,

    /**
     * value: 5016
     * @const
     */
    "5016": 5016,

    /**
     * value: 5017
     * @const
     */
    "5017": 5017,

    /**
     * value: 5018
     * @const
     */
    "5018": 5018,

    /**
     * value: 5019
     * @const
     */
    "5019": 5019,

    /**
     * value: 5020
     * @const
     */
    "5020": 5020,

    /**
     * value: 5021
     * @const
     */
    "5021": 5021,

    /**
     * value: 5022
     * @const
     */
    "5022": 5022,

    /**
     * value: 5023
     * @const
     */
    "5023": 5023,

    /**
     * value: 5024
     * @const
     */
    "5024": 5024,

    /**
     * value: 5025
     * @const
     */
    "5025": 5025,

    /**
     * value: 5026
     * @const
     */
    "5026": 5026,

    /**
     * value: 5027
     * @const
     */
    "5027": 5027,

    /**
     * value: 5028
     * @const
     */
    "5028": 5028,

    /**
     * value: 5029
     * @const
     */
    "5029": 5029,

    /**
     * value: 5030
     * @const
     */
    "5030": 5030,

    /**
     * value: 5031
     * @const
     */
    "5031": 5031,

    /**
     * value: 5032
     * @const
     */
    "5032": 5032,

    /**
     * value: 5033
     * @const
     */
    "5033": 5033,

    /**
     * value: 5035
     * @const
     */
    "5035": 5035,

    /**
     * value: 5036
     * @const
     */
    "5036": 5036,

    /**
     * value: 20001
     * @const
     */
    "20001": 20001
};


/**
 * Allowed values for the <code>chargeType</code> property.
 * @enum {String}
 * @readonly
 */
PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner['ChargeTypeEnum'] = {

    /**
     * value: "included"
     * @const
     */
    "included": "included",

    /**
     * value: "excluded"
     * @const
     */
    "excluded": "excluded",

    /**
     * value: "conditional"
     * @const
     */
    "conditional": "conditional"
};


/**
 * Allowed values for the <code>chargeFrequencyCode</code> property.
 * @enum {Number}
 * @readonly
 */
PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner['ChargeFrequencyCodeEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 7
     * @const
     */
    "7": 7,

    /**
     * value: 10
     * @const
     */
    "10": 10,

    /**
     * value: 12
     * @const
     */
    "12": 12,

    /**
     * value: 17
     * @const
     */
    "17": 17,

    /**
     * value: 19
     * @const
     */
    "19": 19,

    /**
     * value: 20
     * @const
     */
    "20": 20,

    /**
     * value: 21
     * @const
     */
    "21": 21,

    /**
     * value: 25
     * @const
     */
    "25": 25,

    /**
     * value: 31
     * @const
     */
    "31": 31,

    /**
     * value: 5000
     * @const
     */
    "5000": 5000,

    /**
     * value: 5001
     * @const
     */
    "5001": 5001,

    /**
     * value: 5002
     * @const
     */
    "5002": 5002,

    /**
     * value: 5010
     * @const
     */
    "5010": 5010,

    /**
     * value: 5011
     * @const
     */
    "5011": 5011,

    /**
     * value: 5012
     * @const
     */
    "5012": 5012,

    /**
     * value: 5013
     * @const
     */
    "5013": 5013,

    /**
     * value: 5014
     * @const
     */
    "5014": 5014,

    /**
     * value: 5015
     * @const
     */
    "5015": 5015,

    /**
     * value: 5016
     * @const
     */
    "5016": 5016,

    /**
     * value: 5017
     * @const
     */
    "5017": 5017,

    /**
     * value: 90010
     * @const
     */
    "90010": 90010,

    /**
     * value: 90011
     * @const
     */
    "90011": 90011,

    /**
     * value: 90012
     * @const
     */
    "90012": 90012,

    /**
     * value: 90013
     * @const
     */
    "90013": 90013
};


/**
 * Allowed values for the <code>currencyCode</code> property.
 * @enum {String}
 * @readonly
 */
PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner['CurrencyCodeEnum'] = {

    /**
     * value: "AED"
     * @const
     */
    "AED": "AED",

    /**
     * value: "ARS"
     * @const
     */
    "ARS": "ARS",

    /**
     * value: "AUD"
     * @const
     */
    "AUD": "AUD",

    /**
     * value: "AZN"
     * @const
     */
    "AZN": "AZN",

    /**
     * value: "BGN"
     * @const
     */
    "BGN": "BGN",

    /**
     * value: "BHD"
     * @const
     */
    "BHD": "BHD",

    /**
     * value: "BRL"
     * @const
     */
    "BRL": "BRL",

    /**
     * value: "CAD"
     * @const
     */
    "CAD": "CAD",

    /**
     * value: "CHF"
     * @const
     */
    "CHF": "CHF",

    /**
     * value: "CLP"
     * @const
     */
    "CLP": "CLP",

    /**
     * value: "CNY"
     * @const
     */
    "CNY": "CNY",

    /**
     * value: "COP"
     * @const
     */
    "COP": "COP",

    /**
     * value: "CZK"
     * @const
     */
    "CZK": "CZK",

    /**
     * value: "DKK"
     * @const
     */
    "DKK": "DKK",

    /**
     * value: "EGP"
     * @const
     */
    "EGP": "EGP",

    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR",

    /**
     * value: "FJD"
     * @const
     */
    "FJD": "FJD",

    /**
     * value: "GBP"
     * @const
     */
    "GBP": "GBP",

    /**
     * value: "GEL"
     * @const
     */
    "GEL": "GEL",

    /**
     * value: "HKD"
     * @const
     */
    "HKD": "HKD",

    /**
     * value: "HUF"
     * @const
     */
    "HUF": "HUF",

    /**
     * value: "IDR"
     * @const
     */
    "IDR": "IDR",

    /**
     * value: "ILS"
     * @const
     */
    "ILS": "ILS",

    /**
     * value: "INR"
     * @const
     */
    "INR": "INR",

    /**
     * value: "JOD"
     * @const
     */
    "JOD": "JOD",

    /**
     * value: "JPY"
     * @const
     */
    "JPY": "JPY",

    /**
     * value: "KRW"
     * @const
     */
    "KRW": "KRW",

    /**
     * value: "KWD"
     * @const
     */
    "KWD": "KWD",

    /**
     * value: "KZT"
     * @const
     */
    "KZT": "KZT",

    /**
     * value: "MDL"
     * @const
     */
    "MDL": "MDL",

    /**
     * value: "MXN"
     * @const
     */
    "MXN": "MXN",

    /**
     * value: "MYR"
     * @const
     */
    "MYR": "MYR",

    /**
     * value: "NAD"
     * @const
     */
    "NAD": "NAD",

    /**
     * value: "NOK"
     * @const
     */
    "NOK": "NOK",

    /**
     * value: "NZD"
     * @const
     */
    "NZD": "NZD",

    /**
     * value: "OMR"
     * @const
     */
    "OMR": "OMR",

    /**
     * value: "PLN"
     * @const
     */
    "PLN": "PLN",

    /**
     * value: "QAR"
     * @const
     */
    "QAR": "QAR",

    /**
     * value: "RON"
     * @const
     */
    "RON": "RON",

    /**
     * value: "RUB"
     * @const
     */
    "RUB": "RUB",

    /**
     * value: "SAR"
     * @const
     */
    "SAR": "SAR",

    /**
     * value: "SEK"
     * @const
     */
    "SEK": "SEK",

    /**
     * value: "SGD"
     * @const
     */
    "SGD": "SGD",

    /**
     * value: "THB"
     * @const
     */
    "THB": "THB",

    /**
     * value: "TRY"
     * @const
     */
    "TRY": "TRY",

    /**
     * value: "TWD"
     * @const
     */
    "TWD": "TWD",

    /**
     * value: "UAH"
     * @const
     */
    "UAH": "UAH",

    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",

    /**
     * value: "XOF"
     * @const
     */
    "XOF": "XOF",

    /**
     * value: "ZAR"
     * @const
     */
    "ZAR": "ZAR"
};


/**
 * Allowed values for the <code>conditionList</code> property.
 * @enum {String}
 * @readonly
 */
PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner['ConditionListEnum'] = {

    /**
     * value: "guest_brings_pet"
     * @const
     */
    "brings_pet": "guest_brings_pet",

    /**
     * value: "guest_doesnt_clean_before_checkout"
     * @const
     */
    "doesnt_clean_before_checkout": "guest_doesnt_clean_before_checkout",

    /**
     * value: "guest_smokes"
     * @const
     */
    "smokes": "guest_smokes"
};



export default PropertiesPropertyIdGet200ResponsePropertyPolicyListInnerFeePolicyListInner;

