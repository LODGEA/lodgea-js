/**
 * lodgea-js
 * LODGEA SDK for javascript. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AvailablePropertiesInner model module.
 * @module com.lodgea/com.lodgea.model/AvailablePropertiesInner
 * @version 1.1.0
 */
class AvailablePropertiesInner {
    /**
     * Constructs a new <code>AvailablePropertiesInner</code>.
     * @alias module:com.lodgea/com.lodgea.model/AvailablePropertiesInner
     * @param name {String} The name of the location.
     * @param currencyCode {module:com.lodgea/com.lodgea.model/AvailablePropertiesInner.CurrencyCodeEnum} The currency code of the currency of the lowest price.
     * @param lowestPrice {Number} The lowest price available for this location.
     * @param type {module:com.lodgea/com.lodgea.model/AvailablePropertiesInner.TypeEnum} The type of the found location.<p>See also <a href=\"#locationtypes\">in the appendix</a>.</p>
     */
    constructor(name, currencyCode, lowestPrice, type) { 
        
        AvailablePropertiesInner.initialize(this, name, currencyCode, lowestPrice, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, currencyCode, lowestPrice, type) { 
        obj['name'] = name;
        obj['currencyCode'] = currencyCode;
        obj['lowestPrice'] = lowestPrice;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>AvailablePropertiesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.lodgea/com.lodgea.model/AvailablePropertiesInner} obj Optional instance to populate.
     * @return {module:com.lodgea/com.lodgea.model/AvailablePropertiesInner} The populated <code>AvailablePropertiesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AvailablePropertiesInner();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('lowestPrice')) {
                obj['lowestPrice'] = ApiClient.convertToType(data['lowestPrice'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AvailablePropertiesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AvailablePropertiesInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AvailablePropertiesInner.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

AvailablePropertiesInner.RequiredProperties = ["name", "currencyCode", "lowestPrice", "type"];

/**
 * The name of the location.
 * @member {String} name
 */
AvailablePropertiesInner.prototype['name'] = undefined;

/**
 * The currency code of the currency of the lowest price.
 * @member {module:com.lodgea/com.lodgea.model/AvailablePropertiesInner.CurrencyCodeEnum} currencyCode
 */
AvailablePropertiesInner.prototype['currencyCode'] = undefined;

/**
 * The lowest price available for this location.
 * @member {Number} lowestPrice
 */
AvailablePropertiesInner.prototype['lowestPrice'] = undefined;

/**
 * The type of the found location.<p>See also <a href=\"#locationtypes\">in the appendix</a>.</p>
 * @member {module:com.lodgea/com.lodgea.model/AvailablePropertiesInner.TypeEnum} type
 */
AvailablePropertiesInner.prototype['type'] = undefined;





/**
 * Allowed values for the <code>currencyCode</code> property.
 * @enum {String}
 * @readonly
 */
AvailablePropertiesInner['CurrencyCodeEnum'] = {

    /**
     * value: "AED"
     * @const
     */
    "AED": "AED",

    /**
     * value: "ARS"
     * @const
     */
    "ARS": "ARS",

    /**
     * value: "AUD"
     * @const
     */
    "AUD": "AUD",

    /**
     * value: "AZN"
     * @const
     */
    "AZN": "AZN",

    /**
     * value: "BGN"
     * @const
     */
    "BGN": "BGN",

    /**
     * value: "BHD"
     * @const
     */
    "BHD": "BHD",

    /**
     * value: "BRL"
     * @const
     */
    "BRL": "BRL",

    /**
     * value: "CAD"
     * @const
     */
    "CAD": "CAD",

    /**
     * value: "CHF"
     * @const
     */
    "CHF": "CHF",

    /**
     * value: "CLP"
     * @const
     */
    "CLP": "CLP",

    /**
     * value: "CNY"
     * @const
     */
    "CNY": "CNY",

    /**
     * value: "COP"
     * @const
     */
    "COP": "COP",

    /**
     * value: "CZK"
     * @const
     */
    "CZK": "CZK",

    /**
     * value: "DKK"
     * @const
     */
    "DKK": "DKK",

    /**
     * value: "EGP"
     * @const
     */
    "EGP": "EGP",

    /**
     * value: "EUR"
     * @const
     */
    "EUR": "EUR",

    /**
     * value: "FJD"
     * @const
     */
    "FJD": "FJD",

    /**
     * value: "GBP"
     * @const
     */
    "GBP": "GBP",

    /**
     * value: "GEL"
     * @const
     */
    "GEL": "GEL",

    /**
     * value: "HKD"
     * @const
     */
    "HKD": "HKD",

    /**
     * value: "HUF"
     * @const
     */
    "HUF": "HUF",

    /**
     * value: "IDR"
     * @const
     */
    "IDR": "IDR",

    /**
     * value: "ILS"
     * @const
     */
    "ILS": "ILS",

    /**
     * value: "INR"
     * @const
     */
    "INR": "INR",

    /**
     * value: "JOD"
     * @const
     */
    "JOD": "JOD",

    /**
     * value: "JPY"
     * @const
     */
    "JPY": "JPY",

    /**
     * value: "KRW"
     * @const
     */
    "KRW": "KRW",

    /**
     * value: "KWD"
     * @const
     */
    "KWD": "KWD",

    /**
     * value: "KZT"
     * @const
     */
    "KZT": "KZT",

    /**
     * value: "MDL"
     * @const
     */
    "MDL": "MDL",

    /**
     * value: "MXN"
     * @const
     */
    "MXN": "MXN",

    /**
     * value: "MYR"
     * @const
     */
    "MYR": "MYR",

    /**
     * value: "NAD"
     * @const
     */
    "NAD": "NAD",

    /**
     * value: "NOK"
     * @const
     */
    "NOK": "NOK",

    /**
     * value: "NZD"
     * @const
     */
    "NZD": "NZD",

    /**
     * value: "OMR"
     * @const
     */
    "OMR": "OMR",

    /**
     * value: "PLN"
     * @const
     */
    "PLN": "PLN",

    /**
     * value: "QAR"
     * @const
     */
    "QAR": "QAR",

    /**
     * value: "RON"
     * @const
     */
    "RON": "RON",

    /**
     * value: "RUB"
     * @const
     */
    "RUB": "RUB",

    /**
     * value: "SAR"
     * @const
     */
    "SAR": "SAR",

    /**
     * value: "SEK"
     * @const
     */
    "SEK": "SEK",

    /**
     * value: "SGD"
     * @const
     */
    "SGD": "SGD",

    /**
     * value: "THB"
     * @const
     */
    "THB": "THB",

    /**
     * value: "TRY"
     * @const
     */
    "TRY": "TRY",

    /**
     * value: "TWD"
     * @const
     */
    "TWD": "TWD",

    /**
     * value: "UAH"
     * @const
     */
    "UAH": "UAH",

    /**
     * value: "USD"
     * @const
     */
    "USD": "USD",

    /**
     * value: "XOF"
     * @const
     */
    "XOF": "XOF",

    /**
     * value: "ZAR"
     * @const
     */
    "ZAR": "ZAR"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AvailablePropertiesInner['TypeEnum'] = {

    /**
     * value: "formatted_address"
     * @const
     */
    "formatted_address": "formatted_address",

    /**
     * value: "place_id"
     * @const
     */
    "place_id": "place_id",

    /**
     * value: "locality"
     * @const
     */
    "locality": "locality",

    /**
     * value: "administrative_area_level_1"
     * @const
     */
    "administrative_area_level_1": "administrative_area_level_1",

    /**
     * value: "administrative_area_level_2"
     * @const
     */
    "administrative_area_level_2": "administrative_area_level_2",

    /**
     * value: "administrative_area_level_3"
     * @const
     */
    "administrative_area_level_3": "administrative_area_level_3",

    /**
     * value: "administrative_area_level_4"
     * @const
     */
    "administrative_area_level_4": "administrative_area_level_4",

    /**
     * value: "administrative_area_level_5"
     * @const
     */
    "administrative_area_level_5": "administrative_area_level_5",

    /**
     * value: "state_code"
     * @const
     */
    "state_code": "state_code",

    /**
     * value: "country"
     * @const
     */
    "country": "country",

    /**
     * value: "country_code"
     * @const
     */
    "country_code": "country_code",

    /**
     * value: "postal_code"
     * @const
     */
    "postal_code": "postal_code",

    /**
     * value: "language"
     * @const
     */
    "language": "language",

    /**
     * value: "natural_feature"
     * @const
     */
    "natural_feature": "natural_feature",

    /**
     * value: "establishment"
     * @const
     */
    "establishment": "establishment",

    /**
     * value: "sublocality"
     * @const
     */
    "sublocality": "sublocality",

    /**
     * value: "sublocality_level_1"
     * @const
     */
    "sublocality_level_1": "sublocality_level_1",

    /**
     * value: "sublocality_level_2"
     * @const
     */
    "sublocality_level_2": "sublocality_level_2",

    /**
     * value: "sublocality_level_3"
     * @const
     */
    "sublocality_level_3": "sublocality_level_3",

    /**
     * value: "sublocality_level_4"
     * @const
     */
    "sublocality_level_4": "sublocality_level_4",

    /**
     * value: "sublocality_level_5"
     * @const
     */
    "sublocality_level_5": "sublocality_level_5",

    /**
     * value: "streetNumber"
     * @const
     */
    "streetNumber": "streetNumber"
};



export default AvailablePropertiesInner;

