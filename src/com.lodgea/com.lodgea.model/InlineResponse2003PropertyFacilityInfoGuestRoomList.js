/**
 * lodgea-js
 * LODGEA SDK for javascript. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InlineResponse2003PropertyFacilityInfoAmenityList from './InlineResponse2003PropertyFacilityInfoAmenityList';
import InlineResponse2003PropertyFacilityInfoMediaList from './InlineResponse2003PropertyFacilityInfoMediaList';
import InlineResponse2003PropertyFacilityInfoMessageList from './InlineResponse2003PropertyFacilityInfoMessageList';

/**
 * The InlineResponse2003PropertyFacilityInfoGuestRoomList model module.
 * @module com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoGuestRoomList
 * @version 1.2.0
 */
class InlineResponse2003PropertyFacilityInfoGuestRoomList {
    /**
     * Constructs a new <code>InlineResponse2003PropertyFacilityInfoGuestRoomList</code>.
     * An object representing a room in the property.
     * @alias module:com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoGuestRoomList
     * @param isActive {Boolean} Indicates whether the room is active or not.
     * @param roomId {String} The unique identifier for the room.
     * @param name {String} The name of the room.
     * @param mediaList {Array.<module:com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoMediaList>} A list of media objects for the room.
     * @param roomTypeCode {module:com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoGuestRoomList.RoomTypeCodeEnum} The unit and room type code.<p>See also <a href=\"#unitand-room-type-codes\">in the appendix</a>.</p>
     * @param isNonSmoking {Boolean} Indicates whether the room is designated as non-smoking.
     * @param amenityList {Array.<module:com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoAmenityList>} A list of amenities provided in the room.
     * @param messageList {Array.<module:com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoMessageList>} A list of messages associated with the room.
     * @param maxOccupancy {Number} The maximum occupancy of the room.
     * @param maxAdultOccupancy {Number} The maximum number of adults that can occupy the room.
     * @param maxChildOccupancy {Number} The maximum number of children that can occupy the room.
     */
    constructor(isActive, roomId, name, mediaList, roomTypeCode, isNonSmoking, amenityList, messageList, maxOccupancy, maxAdultOccupancy, maxChildOccupancy) { 
        
        InlineResponse2003PropertyFacilityInfoGuestRoomList.initialize(this, isActive, roomId, name, mediaList, roomTypeCode, isNonSmoking, amenityList, messageList, maxOccupancy, maxAdultOccupancy, maxChildOccupancy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, isActive, roomId, name, mediaList, roomTypeCode, isNonSmoking, amenityList, messageList, maxOccupancy, maxAdultOccupancy, maxChildOccupancy) { 
        obj['isActive'] = isActive;
        obj['roomId'] = roomId;
        obj['name'] = name;
        obj['mediaList'] = mediaList;
        obj['roomTypeCode'] = roomTypeCode;
        obj['isNonSmoking'] = isNonSmoking;
        obj['amenityList'] = amenityList;
        obj['messageList'] = messageList;
        obj['maxOccupancy'] = maxOccupancy;
        obj['maxAdultOccupancy'] = maxAdultOccupancy;
        obj['maxChildOccupancy'] = maxChildOccupancy;
    }

    /**
     * Constructs a <code>InlineResponse2003PropertyFacilityInfoGuestRoomList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoGuestRoomList} obj Optional instance to populate.
     * @return {module:com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoGuestRoomList} The populated <code>InlineResponse2003PropertyFacilityInfoGuestRoomList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InlineResponse2003PropertyFacilityInfoGuestRoomList();

            if (data.hasOwnProperty('isActive')) {
                obj['isActive'] = ApiClient.convertToType(data['isActive'], 'Boolean');
            }
            if (data.hasOwnProperty('roomId')) {
                obj['roomId'] = ApiClient.convertToType(data['roomId'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('mediaList')) {
                obj['mediaList'] = ApiClient.convertToType(data['mediaList'], [InlineResponse2003PropertyFacilityInfoMediaList]);
            }
            if (data.hasOwnProperty('roomTypeCode')) {
                obj['roomTypeCode'] = ApiClient.convertToType(data['roomTypeCode'], 'Number');
            }
            if (data.hasOwnProperty('isNonSmoking')) {
                obj['isNonSmoking'] = ApiClient.convertToType(data['isNonSmoking'], 'Boolean');
            }
            if (data.hasOwnProperty('amenityList')) {
                obj['amenityList'] = ApiClient.convertToType(data['amenityList'], [InlineResponse2003PropertyFacilityInfoAmenityList]);
            }
            if (data.hasOwnProperty('messageList')) {
                obj['messageList'] = ApiClient.convertToType(data['messageList'], [InlineResponse2003PropertyFacilityInfoMessageList]);
            }
            if (data.hasOwnProperty('maxOccupancy')) {
                obj['maxOccupancy'] = ApiClient.convertToType(data['maxOccupancy'], 'Number');
            }
            if (data.hasOwnProperty('maxAdultOccupancy')) {
                obj['maxAdultOccupancy'] = ApiClient.convertToType(data['maxAdultOccupancy'], 'Number');
            }
            if (data.hasOwnProperty('maxChildOccupancy')) {
                obj['maxChildOccupancy'] = ApiClient.convertToType(data['maxChildOccupancy'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Indicates whether the room is active or not.
 * @member {Boolean} isActive
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList.prototype['isActive'] = undefined;

/**
 * The unique identifier for the room.
 * @member {String} roomId
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList.prototype['roomId'] = undefined;

/**
 * The name of the room.
 * @member {String} name
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList.prototype['name'] = undefined;

/**
 * A list of media objects for the room.
 * @member {Array.<module:com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoMediaList>} mediaList
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList.prototype['mediaList'] = undefined;

/**
 * The unit and room type code.<p>See also <a href=\"#unitand-room-type-codes\">in the appendix</a>.</p>
 * @member {module:com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoGuestRoomList.RoomTypeCodeEnum} roomTypeCode
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList.prototype['roomTypeCode'] = undefined;

/**
 * Indicates whether the room is designated as non-smoking.
 * @member {Boolean} isNonSmoking
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList.prototype['isNonSmoking'] = undefined;

/**
 * A list of amenities provided in the room.
 * @member {Array.<module:com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoAmenityList>} amenityList
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList.prototype['amenityList'] = undefined;

/**
 * A list of messages associated with the room.
 * @member {Array.<module:com.lodgea/com.lodgea.model/InlineResponse2003PropertyFacilityInfoMessageList>} messageList
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList.prototype['messageList'] = undefined;

/**
 * The maximum occupancy of the room.
 * @member {Number} maxOccupancy
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList.prototype['maxOccupancy'] = undefined;

/**
 * The maximum number of adults that can occupy the room.
 * @member {Number} maxAdultOccupancy
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList.prototype['maxAdultOccupancy'] = undefined;

/**
 * The maximum number of children that can occupy the room.
 * @member {Number} maxChildOccupancy
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList.prototype['maxChildOccupancy'] = undefined;





/**
 * Allowed values for the <code>roomTypeCode</code> property.
 * @enum {Number}
 * @readonly
 */
InlineResponse2003PropertyFacilityInfoGuestRoomList['RoomTypeCodeEnum'] = {

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 5
     * @const
     */
    "5": 5,

    /**
     * value: 7
     * @const
     */
    "7": 7,

    /**
     * value: 8
     * @const
     */
    "8": 8,

    /**
     * value: 9
     * @const
     */
    "9": 9,

    /**
     * value: 10
     * @const
     */
    "10": 10,

    /**
     * value: 12
     * @const
     */
    "12": 12,

    /**
     * value: 13
     * @const
     */
    "13": 13,

    /**
     * value: 24
     * @const
     */
    "24": 24,

    /**
     * value: 25
     * @const
     */
    "25": 25,

    /**
     * value: 26
     * @const
     */
    "26": 26,

    /**
     * value: 27
     * @const
     */
    "27": 27,

    /**
     * value: 28
     * @const
     */
    "28": 28,

    /**
     * value: 29
     * @const
     */
    "29": 29,

    /**
     * value: 31
     * @const
     */
    "31": 31,

    /**
     * value: 32
     * @const
     */
    "32": 32,

    /**
     * value: 33
     * @const
     */
    "33": 33
};



export default InlineResponse2003PropertyFacilityInfoGuestRoomList;

