/**
 * lodgea-js
 * LODGEA SDK for javascript. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInnerPricingListInner from './PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInnerPricingListInner';

/**
 * The PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner model module.
 * @module com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner
 * @version 1.1.5
 */
class PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner {
    /**
     * Constructs a new <code>PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner</code>.
     * @alias module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner
     * @param active {Boolean} Whether the rate plan is active.
     * @param name {String} The name of the rate plan.
     * @param code {String} The code identifying the rate plan.
     * @param pricingList {Array.<module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInnerPricingListInner>} 
     */
    constructor(active, name, code, pricingList) { 
        
        PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner.initialize(this, active, name, code, pricingList);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, active, name, code, pricingList) { 
        obj['active'] = active;
        obj['name'] = name;
        obj['code'] = code;
        obj['pricingList'] = pricingList;
    }

    /**
     * Constructs a <code>PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner} obj Optional instance to populate.
     * @return {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner} The populated <code>PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('pricingList')) {
                obj['pricingList'] = ApiClient.convertToType(data['pricingList'], [PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInnerPricingListInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        if (data['pricingList']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['pricingList'])) {
                throw new Error("Expected the field `pricingList` to be an array in the JSON data but got " + data['pricingList']);
            }
            // validate the optional field `pricingList` (array)
            for (const item of data['pricingList']) {
                PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInnerPricingListInner.validateJsonObject(item);
            };
        }

        return true;
    }


}

PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner.RequiredProperties = ["active", "name", "code", "pricingList"];

/**
 * Whether the rate plan is active.
 * @member {Boolean} active
 */
PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner.prototype['active'] = undefined;

/**
 * The name of the rate plan.
 * @member {String} name
 */
PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner.prototype['name'] = undefined;

/**
 * The code identifying the rate plan.
 * @member {String} code
 */
PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner.prototype['code'] = undefined;

/**
 * @member {Array.<module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInnerPricingListInner>} pricingList
 */
PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner.prototype['pricingList'] = undefined;






export default PropertiesPropertyIdGet200ResponseProductListInnerRatePlanListInner;

