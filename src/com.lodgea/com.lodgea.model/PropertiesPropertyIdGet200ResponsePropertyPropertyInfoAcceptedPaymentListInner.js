/**
 * lodgea-js
 * LODGEA SDK for javascript. Check out https://docs.lodgea.io for more information.
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: support@lodgea.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner model module.
 * @module com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner
 * @version 1.1.0
 */
class PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner {
    /**
     * Constructs a new <code>PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner</code>.
     * @alias module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner
     * @param code {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner.CodeEnum} The code of the payment option.
     * @param type {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner.TypeEnum} The type of the payment option.
     */
    constructor(code, type) { 
        
        PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner.initialize(this, code, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, type) { 
        obj['code'] = code;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner} obj Optional instance to populate.
     * @return {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner} The populated <code>PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner.RequiredProperties = ["code", "type"];

/**
 * The code of the payment option.
 * @member {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner.CodeEnum} code
 */
PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner.prototype['code'] = undefined;

/**
 * The type of the payment option.
 * @member {module:com.lodgea/com.lodgea.model/PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner.TypeEnum} type
 */
PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner.prototype['type'] = undefined;





/**
 * Allowed values for the <code>code</code> property.
 * @enum {String}
 * @readonly
 */
PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner['CodeEnum'] = {

    /**
     * value: "amex"
     * @const
     */
    "amex": "amex",

    /**
     * value: "visa"
     * @const
     */
    "visa": "visa",

    /**
     * value: "mastercard"
     * @const
     */
    "mastercard": "mastercard",

    /**
     * value: "diners"
     * @const
     */
    "diners": "diners",

    /**
     * value: "jcb"
     * @const
     */
    "jcb": "jcb",

    /**
     * value: "maestro"
     * @const
     */
    "maestro": "maestro",

    /**
     * value: "discover"
     * @const
     */
    "discover": "discover",

    /**
     * value: "bancontact"
     * @const
     */
    "bancontact": "bancontact",

    /**
     * value: "cashonly"
     * @const
     */
    "cashonly": "cashonly",

    /**
     * value: "bankcard"
     * @const
     */
    "bankcard": "bankcard",

    /**
     * value: "cartasi"
     * @const
     */
    "cartasi": "cartasi",

    /**
     * value: "argencard"
     * @const
     */
    "argencard": "argencard",

    /**
     * value: "cabal"
     * @const
     */
    "cabal": "cabal",

    /**
     * value: "redcompra"
     * @const
     */
    "redcompra": "redcompra",

    /**
     * value: "other"
     * @const
     */
    "other": "other",

    /**
     * value: "greatwall"
     * @const
     */
    "greatwall": "greatwall",

    /**
     * value: "dragonpay"
     * @const
     */
    "dragonpay": "dragonpay",

    /**
     * value: "eftpos"
     * @const
     */
    "eftpos": "eftpos",

    /**
     * value: "hipercard"
     * @const
     */
    "hipercard": "hipercard",

    /**
     * value: "unionpaydebit"
     * @const
     */
    "unionpaydebit": "unionpaydebit",

    /**
     * value: "eccard"
     * @const
     */
    "eccard": "eccard",

    /**
     * value: "bccard"
     * @const
     */
    "bccard": "bccard",

    /**
     * value: "mastercardvirtual"
     * @const
     */
    "mastercardvirtual": "mastercardvirtual",

    /**
     * value: "mastercardgoogle"
     * @const
     */
    "mastercardgoogle": "mastercardgoogle",

    /**
     * value: "unionpaycredit"
     * @const
     */
    "unionpaycredit": "unionpaycredit"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner['TypeEnum'] = {

    /**
     * value: "creditcard"
     * @const
     */
    "creditcard": "creditcard",

    /**
     * value: "debitcard"
     * @const
     */
    "debitcard": "debitcard",

    /**
     * value: "paymentservice"
     * @const
     */
    "paymentservice": "paymentservice",

    /**
     * value: "cash"
     * @const
     */
    "cash": "cash"
};



export default PropertiesPropertyIdGet200ResponsePropertyPropertyInfoAcceptedPaymentListInner;

